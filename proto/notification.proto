syntax = "proto3";

package notification;

service NotificationService {
  rpc upsert(UpsertNotificationDto) returns (Notification) {}
  rpc update(UpdateNotificationDto) returns (Notification) {}
  rpc findMany(NotificationFindParams) returns (Notifications) {}
  rpc delete(NotificationWhereUnique) returns (Empty) {}
  rpc findOne(NotificationWhereUnique) returns (Notification) {}
}

message UpsertNotificationDto {
  optional string postId = 1;
  string interactorId = 2;
  string userId = 3;
  string content = 4;
}

message UpdateNotificationDto {
  string id = 1;
  bool read = 2;
}

message Notification {
  string id = 1;
  NotificationType type = 2;
  optional string postId = 3;
  repeated string interactorId = 4;
  string userId = 5;
  string content = 6;
  bool read = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

message Notifications {
  repeated Notification notifications = 1;
}

message NotificationWhereUnique {
  string id = 1;
}

message NotificationWhere {
  string userId = 1;
}

message NotificationFindParams {
  NotificationWhere where = 1;
  optional int32 skip = 2;
  optional int32 take = 3;
  optional string orderBy = 4;
}

message Empty {}

enum NotificationType {
  OTHER = 0;
  LIKE = 1;
  COMMENT = 2;
  FOLLOW = 3;
}
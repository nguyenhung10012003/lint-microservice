syntax = "proto3";

package interaction;
import "count.proto";
import "query.proto";

service CommentService {
  rpc create(CommentDto) returns (Comment) {}
  rpc delete(CommentId) returns (Comment) {}
  rpc find(CommentParams) returns (Comments) {}
  rpc findOne(CommentWhereUnique) returns (Comment) {}
  rpc update(CommentUpdateDto) returns (Comment) {}
  rpc count(CommentWhere) returns (Count) {}
}

service ReplyService {
  rpc create(ReplyDto) returns (Reply) {}
  rpc delete(ReplyWhereUnique) returns (Reply) {}
  rpc find(ReplyParams) returns (Replies) {}
  rpc findOne(ReplyWhereUnique) returns (Reply) {}
  rpc update(ReplyUpdateDto) returns (Reply) {}
}

message CommentDto {
  string userId = 1;
  string postId = 2;
  string content = 3;
}

message CommentUpdateDto {
  string id = 1;
  optional string userId = 2;
  optional string postId = 3;
  optional string content = 4;
}

message Comment {
  string id = 1;
  string userId = 2;
  string postId = 3;
  string content = 4;
  string createdAt = 5;
  string updatedAt = 6;
  repeated Reply replies = 7;
}

message CommentWhere {
  optional string id = 1;
  optional string userId = 2;
  optional string postId = 3;
  optional string content = 4;
}

message CommentWhereUnique {
  string id = 1;
  optional string userId = 2;
  optional string postId = 3;
  optional string content = 4;
}

message CommentSelect {
  optional bool id = 1;
  optional bool userId = 2;
  optional bool postId = 3;
  optional bool content = 4;
  optional bool createdAt = 5;
  optional bool updatedAt = 6;
  optional bool replies = 7;
}

message CommentParams {
  optional CommentWhere where = 1;
  optional int32 take = 2;
  optional int32 skip = 3;
  optional CommentSelect select = 4;
  optional CommentOrderBy orderBy = 5;
}

message CommentOrderBy {
  optional SortOrder id = 1;
  optional SortOrder userId = 2;
  optional SortOrder postId = 3;
  optional SortOrder content = 4;
  optional SortOrder createdAt = 5;
  optional SortOrder updatedAt = 6;
}

message CommentId {
  string id = 1;
}

message ReplyDto {
  string userId = 1;
  string commentId = 2;
  string content = 3;
}

message ReplyUpdateDto {
  string id = 1;
  optional string userId = 2;
  optional string commentId = 3;
  optional string content = 4;
}

message Reply {
  string id = 1;
  string userId = 2;
  string commentId = 3;
  string content = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message ReplyWhere {
  optional string id = 1;
  optional string userId = 2;
  optional string commentId = 3;
  optional string content = 4;
}

message ReplyWhereUnique {
  string id = 1;
  optional string userId = 2;
  optional string commentId = 3;
  optional string content = 4;
}

message ReplySelect {
  optional bool id = 1;
  optional bool userId = 2;
  optional bool commentId = 3;
  optional bool content = 4;
}

message ReplyParams {
  optional ReplyWhere where = 1;
  optional int32 take = 2;
  optional int32 skip = 3;
  optional ReplySelect select = 4;
  optional ReplyOrderBy orderBy = 5;
}

message ReplyOrderBy {
  optional SortOrder id = 1;
  optional SortOrder userId = 2;
  optional SortOrder commentId = 3;
  optional SortOrder content = 4;
  optional SortOrder createdAt = 5;
  optional SortOrder updatedAt = 6;
}

message ReplyId {
  string id = 1;
}

message Comments {
  repeated Comment comments = 1;
}

message Replies {
  repeated Reply replies = 1;
}

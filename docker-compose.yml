version: '2'
services:
  api-gateway:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: ["yarn" , "start:prod"]
    
     
  user-service:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    command: ["yarn" , "start:prod", user"]
    

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    command: ["yarn" , "start:prod", auth"]
    

  relationship-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    command: ["yarn" , "start:prod", relationship"]
    

  post-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    command: ["yarn" , "start:prod", post"]
    

  interaction-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    command: ["yarn" , "start:prod", interaction"]
    

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    command: ["yarn" , "start:prod", notification"]
    

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock